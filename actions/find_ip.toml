[[action]]
name = "find_ip"
[action.config]
file_contents = """
const IP_LIKE = '172.16.10';
// set to false to find ALL that match, otherwise exits after first found
const FIND_ONE = true;

let foundAny = false;

const servers: Types.ListServersResponse = await komodo.read('ListServers', {});

for(const s of servers) {
  const containers = await komodo.read('ListDockerContainers', {server: s.id});
  for(const c of containers) {
    const inspect = await komodo.read('InspectDockerContainer', {server: s.id, container: c.id});
    if(inspect.NetworkSettings.Networks !== undefined) {
      const found: string[] = [];
      for(const [network, v] of Object.entries(inspect.NetworkSettings.Networks)) {
        if(v.Gateway.includes(IP_LIKE)) {
          found.push(`Gateway ${v.Gateway} in Network ${network}`);
        }
        if(v.IPAddress.includes(IP_LIKE)) {
          found.push(`IP ${v.IPAddress} in Network ${network}`);
        }
      }
        if(found.length > 0) {
          console.log(`Server ${s.name} -> Container ${c.name} has ${found.join(', ')}`);
          foundAny = true;
      }
    }
    if(foundAny && FIND_ONE) {
      break;
    }
  }
  if(foundAny && FIND_ONE) {
    break;
  }
}

if(!foundAny) {
  console.log(`Did not find Gatways or IP Addresses containing ${IP_LIKE}`);
}
"""